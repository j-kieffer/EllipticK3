Notes on Magma package for parameterizations of elliptic surfaces.

General coding conventions
==========================

- Each function has its own file. Exceptions to this rule are
  overloads, functions with very close names
  (Coefficient/Coefficients, etc.), and helper functions that are only
  meant to be used locally.

- Functions are always capitalized, arguments are never capitalized.

- Package may be separated in different subfolders. Then, make a spec
  file at the level of each subfolder.

- At top level, make a Tests folder containing an example/test file
  for each subfolder.

- Use requires for argument checking as much as possible in all
  functions, when calls to Magma intrinsics are made.

- Never call attributes directly; write wrappers instead.

- Make user-specific types instead of long lists of arguments.

- In each function, specify types of arguments in a way that is
  consistent with the contents of that function.

- Use mathematically meaningful function names whenever possible, even
  if that means redefining very short functions.

- Comment every function in a succinct way, except redefinitions of
  the same functions with slightly different argument types which may
  be left empty.

- Skip line between top and function name, function name and comment,
  comment and requires, requires and function body to allow for Emacs
  reformatting. Skip line before "end intrinsic;"

- Type definitions and attribute functions go in a DefineType.m file.

- Use /* */ for multiple-line comments to allow for Emacs formatting;
  separate them from function body using newlines.

- Use "print" statement whenever we want to print something.

- Descriptions: Boolean functions should start by "True iff". Always
  end with a dot.

Development process
===================

- Using math function names should allow for top-down development, and
  type-independent ways of writing functions.

Specific to this package
========================



